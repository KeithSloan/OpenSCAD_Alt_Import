
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocASSERTnonassocECHOnonassocTHENnonassocELSEnonassoc?nonassoc:nonassoc(){}nonassoc=leftANDORleftEQUALNOT_EQUALGREATER_OR_EQUALLESS_OR_EQUAL><left+-left%left*/right^rightNEGPOSBACKGROUNDNOTleftACCESSAND ASSERT EACH ECHO ELSE EQUAL FALSE FILENAME FOR FUNCTION GREATER_OR_EQUAL ID IF INCLUDE LESS_OR_EQUAL LET MODULE NOT_EQUAL NUMBER OR STRING TRUE USEstatements : statements statementstatements : emptyempty :  use_include :  USE FILENAME\n                |   INCLUDE FILENAME\n                 statement : IF "(" expression ")" statement %prec THEN\n                |   IF "(" expression ")" statement ELSE statement\n                |   for_loop statement\n                |   LET "(" assignment_list ")" statement %prec THEN\n                |   ASSERT "(" opt_call_parameter_list ")" statement\n                |   ECHO "(" opt_call_parameter_list ")" statement\n                |   "{" statements "}"\n                |   "%" statement %prec BACKGROUND\n                |   "*" statement %prec BACKGROUND\n                |   "!" statement %prec BACKGROUND\n                |   "#" statement %prec BACKGROUND\n                |   call statement\n                |   use_include\n                |   ";"\n                for_loop : FOR "(" parameter_list ")"\n                | FOR "(" parameter_list ";" expression ";" parameter_list ")"statement : functionstatement : modulestatement : ID "=" expression ";"logic_expr :  "-" expression %prec NEG\n                |   "+" expression %prec POS\n                |   "!" expression %prec NOT\n                |   expression "?" expression ":" expression\n                |   expression "%" expression\n                |   expression "+" expression\n                |   expression "-" expression\n                |   expression "/" expression\n                |   expression "*" expression\n                |   expression "^" expression\n                |   expression "<" expression\n                |   expression ">" expression\n                |   expression EQUAL expression\n                |   expression NOT_EQUAL expression\n                |   expression GREATER_OR_EQUAL expression\n                |   expression LESS_OR_EQUAL expression\n                |   expression AND expression\n                |   expression OR expression\n       access_expr : ID %prec ACCESS\n                |   expression "." ID %prec ACCESS\n                |   expression "(" call_parameter_list ")" %prec ACCESS\n                |   expression "(" ")" %prec ACCESS\n                |   expression "[" expression "]" %prec ACCESS\n        list_stuff : FUNCTION "(" opt_parameter_list ")" expression\n                |   LET "(" assignment_list ")" expression %prec THEN\n                |   EACH expression %prec THEN\n                |   "[" expression ":" expression "]"\n                |   "[" expression ":" expression ":" expression "]"\n                |   "[" for_loop expression "]"\n                |   tuple\n        assert_or_echo : ASSERT "(" opt_call_parameter_list ")"\n                    |   ECHO "(" opt_call_parameter_list ")"\n       constants : STRING\n                |  TRUE\n                |  FALSE\n                |  NUMBERopt_else :\n                | ELSE expression %prec THEN\n       for_or_if :  for_loop expression %prec THEN\n                |   IF "(" expression ")" expression opt_else\n       expression : access_expr\n                |   logic_expr\n                |   list_stuff\n                |   assert_or_echo\n                |   assert_or_echo expression %prec ASSERT\n                |   constants\n                |   for_or_if\n                |   "(" expression ")"\n       assignment_list : ID "=" expression\n                    |   assignment_list "," ID "=" expression\n        call : ID "(" call_parameter_list ")"\n            |  ID "(" ")" tuple : "[" opt_expression_list "]"\n        commas : commas ","\n              | ","\n       opt_expression_list : expression_list\n                        |    expression_list commas\n                        |    empty expression_list : expression_list commas expression\n                    |     expression\n        opt_call_parameter_list :\n                               | call_parameter_list\n       call_parameter_list : call_parameter_list commas call_parameter\n                        |    call_parametercall_parameter : expression\n                    |   ID "=" expressionopt_parameter_list : parameter_list\n                        |   parameter_list commas\n                        |   empty\n       parameter_list :     parameter_list commas parameter\n                        |   parameterparameter : ID\n                |  ID "=" expressionfunction : FUNCTION ID "(" opt_parameter_list ")" "=" expression\n       module : MODULE ID "(" opt_parameter_list ")" statement\n       '
    
_lr_action_items = {'IF':([0,1,2,3,5,9,10,11,12,13,14,15,16,17,18,25,26,28,29,30,31,32,33,34,35,36,37,39,40,44,46,47,48,49,50,51,52,53,54,55,56,59,60,61,64,65,66,67,76,79,85,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,112,113,114,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,134,140,142,143,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,169,172,174,176,182,183,184,185,186,187,189,191,192,193,194,195,197,198,199,200,201,202,203,204,205,208,209,210,212,213,214,],[-3,4,-2,-1,4,-3,4,4,4,4,4,-18,-19,-22,-23,43,-8,43,43,4,-13,-14,-15,-16,-17,43,43,-4,-5,43,-65,-66,-67,43,-70,-71,-43,43,43,43,43,43,43,-54,-57,-58,-59,-60,-12,-76,43,43,4,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-69,43,-25,-26,-27,-50,-63,43,43,4,43,4,43,-79,43,4,-24,-75,-20,43,43,-72,-46,-6,-44,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,43,-77,43,-9,-10,-78,-11,4,43,-45,4,-47,43,-53,43,43,-55,-56,43,43,-99,-61,-7,-28,43,-51,-48,-49,-98,-64,43,-21,-62,-52,]),'LET':([0,1,2,3,5,9,10,11,12,13,14,15,16,17,18,25,26,28,29,30,31,32,33,34,35,36,37,39,40,44,46,47,48,49,50,51,52,53,54,55,56,59,60,61,64,65,66,67,76,79,85,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,112,113,114,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,134,140,142,143,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,169,172,174,176,182,183,184,185,186,187,189,191,192,193,194,195,197,198,199,200,201,202,203,204,205,208,209,210,212,213,214,],[-3,6,-2,-1,6,-3,6,6,6,6,6,-18,-19,-22,-23,58,-8,58,58,6,-13,-14,-15,-16,-17,58,58,-4,-5,58,-65,-66,-67,58,-70,-71,-43,58,58,58,58,58,58,-54,-57,-58,-59,-60,-12,-76,58,58,6,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-69,58,-25,-26,-27,-50,-63,58,58,6,58,6,58,-79,58,6,-24,-75,-20,58,58,-72,-46,-6,-44,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,58,-77,58,-9,-10,-78,-11,6,58,-45,6,-47,58,-53,58,58,-55,-56,58,58,-99,-61,-7,-28,58,-51,-48,-49,-98,-64,58,-21,-62,-52,]),'ASSERT':([0,1,2,3,5,9,10,11,12,13,14,15,16,17,18,25,26,28,29,30,31,32,33,34,35,36,37,39,40,44,46,47,48,49,50,51,52,53,54,55,56,59,60,61,64,65,66,67,76,79,85,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,112,113,114,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,134,140,142,143,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,169,172,174,176,182,183,184,185,186,187,189,191,192,193,194,195,197,198,199,200,201,202,203,204,205,208,209,210,212,213,214,],[-3,7,-2,-1,7,-3,7,7,7,7,7,-18,-19,-22,-23,62,-8,62,62,7,-13,-14,-15,-16,-17,62,62,-4,-5,62,-65,-66,-67,62,-70,-71,-43,62,62,62,62,62,62,-54,-57,-58,-59,-60,-12,-76,62,62,7,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-69,62,-25,-26,-27,-50,-63,62,62,7,62,7,62,-79,62,7,-24,-75,-20,62,62,-72,-46,-6,-44,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,62,-77,62,-9,-10,-78,-11,7,62,-45,7,-47,62,-53,62,62,-55,-56,62,62,-99,-61,-7,-28,62,-51,-48,-49,-98,-64,62,-21,-62,-52,]),'ECHO':([0,1,2,3,5,9,10,11,12,13,14,15,16,17,18,25,26,28,29,30,31,32,33,34,35,36,37,39,40,44,46,47,48,49,50,51,52,53,54,55,56,59,60,61,64,65,66,67,76,79,85,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,112,113,114,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,134,140,142,143,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,169,172,174,176,182,183,184,185,186,187,189,191,192,193,194,195,197,198,199,200,201,202,203,204,205,208,209,210,212,213,214,],[-3,8,-2,-1,8,-3,8,8,8,8,8,-18,-19,-22,-23,63,-8,63,63,8,-13,-14,-15,-16,-17,63,63,-4,-5,63,-65,-66,-67,63,-70,-71,-43,63,63,63,63,63,63,-54,-57,-58,-59,-60,-12,-76,63,63,8,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-69,63,-25,-26,-27,-50,-63,63,63,8,63,8,63,-79,63,8,-24,-75,-20,63,63,-72,-46,-6,-44,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,63,-77,63,-9,-10,-78,-11,8,63,-45,8,-47,63,-53,63,63,-55,-56,63,63,-99,-61,-7,-28,63,-51,-48,-49,-98,-64,63,-21,-62,-52,]),'{':([0,1,2,3,5,9,10,11,12,13,14,15,16,17,18,26,30,31,32,33,34,35,39,40,46,47,48,49,50,51,52,61,64,65,66,67,76,79,88,106,112,113,114,117,118,121,124,128,129,130,131,140,142,143,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,169,172,176,182,184,185,186,189,193,194,198,199,200,201,203,204,205,208,209,212,213,214,],[-3,9,-2,-1,9,-3,9,9,9,9,9,-18,-19,-22,-23,-8,9,-13,-14,-15,-16,-17,-4,-5,-65,-66,-67,-68,-70,-71,-43,-54,-57,-58,-59,-60,-12,-76,9,-69,-25,-26,-27,-50,-63,9,9,9,-24,-75,-20,-72,-46,-6,-44,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-77,-9,-10,-11,9,-45,9,-47,-53,-55,-56,-99,-61,-7,-28,-51,-48,-49,-98,-64,-21,-62,-52,]),'%':([0,1,2,3,5,9,10,11,12,13,14,15,16,17,18,26,30,31,32,33,34,35,39,40,45,46,47,48,49,50,51,52,61,64,65,66,67,73,74,76,77,79,86,88,106,107,112,113,114,117,118,121,124,128,129,130,131,139,140,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,169,171,172,175,176,177,179,182,184,185,186,188,189,190,193,194,198,199,200,201,203,204,205,206,208,209,211,212,213,214,],[-3,10,-2,-1,10,-3,10,10,10,10,10,-18,-19,-22,-23,-8,10,-13,-14,-15,-16,-17,-4,-5,92,-65,-66,-67,-68,-70,-71,-43,-54,-57,-58,-59,-60,92,-43,-12,92,-76,92,10,92,92,-25,-26,-27,92,92,10,10,10,-24,-75,-20,92,-72,-46,-6,-44,92,92,-29,92,92,-32,-33,-34,92,92,92,92,92,92,92,92,92,-77,-9,92,-10,92,-11,92,92,10,-45,10,-47,92,-53,92,-55,-56,-99,92,-7,92,-51,92,92,92,92,-64,92,-21,92,-52,]),'*':([0,1,2,3,5,9,10,11,12,13,14,15,16,17,18,26,30,31,32,33,34,35,39,40,45,46,47,48,49,50,51,52,61,64,65,66,67,73,74,76,77,79,86,88,106,107,112,113,114,117,118,121,124,128,129,130,131,139,140,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,169,171,172,175,176,177,179,182,184,185,186,188,189,190,193,194,198,199,200,201,203,204,205,206,208,209,211,212,213,214,],[-3,11,-2,-1,11,-3,11,11,11,11,11,-18,-19,-22,-23,-8,11,-13,-14,-15,-16,-17,-4,-5,96,-65,-66,-67,-68,-70,-71,-43,-54,-57,-58,-59,-60,96,-43,-12,96,-76,96,11,96,96,-25,-26,-27,96,96,11,11,11,-24,-75,-20,96,-72,-46,-6,-44,96,96,96,96,96,-32,-33,-34,96,96,96,96,96,96,96,96,96,-77,-9,96,-10,96,-11,96,96,11,-45,11,-47,96,-53,96,-55,-56,-99,96,-7,96,-51,96,96,96,96,-64,96,-21,96,-52,]),'!':([0,1,2,3,5,9,10,11,12,13,14,15,16,17,18,25,26,28,29,30,31,32,33,34,35,36,37,39,40,44,46,47,48,49,50,51,52,53,54,55,56,59,60,61,64,65,66,67,76,79,85,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,112,113,114,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,134,140,142,143,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,169,172,174,176,182,183,184,185,186,187,189,191,192,193,194,195,197,198,199,200,201,202,203,204,205,208,209,210,212,213,214,],[-3,12,-2,-1,12,-3,12,12,12,12,12,-18,-19,-22,-23,56,-8,56,56,12,-13,-14,-15,-16,-17,56,56,-4,-5,56,-65,-66,-67,56,-70,-71,-43,56,56,56,56,56,56,-54,-57,-58,-59,-60,-12,-76,56,56,12,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-69,56,-25,-26,-27,-50,-63,56,56,12,56,12,56,-79,56,12,-24,-75,-20,56,56,-72,-46,-6,-44,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,56,-77,56,-9,-10,-78,-11,12,56,-45,12,-47,56,-53,56,56,-55,-56,56,56,-99,-61,-7,-28,56,-51,-48,-49,-98,-64,56,-21,-62,-52,]),'#':([0,1,2,3,5,9,10,11,12,13,14,15,16,17,18,26,30,31,32,33,34,35,39,40,46,47,48,49,50,51,52,61,64,65,66,67,76,79,88,106,112,113,114,117,118,121,124,128,129,130,131,140,142,143,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,169,172,176,182,184,185,186,189,193,194,198,199,200,201,203,204,205,208,209,212,213,214,],[-3,13,-2,-1,13,-3,13,13,13,13,13,-18,-19,-22,-23,-8,13,-13,-14,-15,-16,-17,-4,-5,-65,-66,-67,-68,-70,-71,-43,-54,-57,-58,-59,-60,-12,-76,13,-69,-25,-26,-27,-50,-63,13,13,13,-24,-75,-20,-72,-46,-6,-44,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-77,-9,-10,-11,13,-45,13,-47,-53,-55,-56,-99,-61,-7,-28,-51,-48,-49,-98,-64,-21,-62,-52,]),';':([0,1,2,3,5,9,10,11,12,13,14,15,16,17,18,26,30,31,32,33,34,35,39,40,46,47,48,49,50,51,52,61,64,65,66,67,76,77,79,80,81,82,88,106,112,113,114,117,118,121,124,128,129,130,131,140,142,143,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,169,172,176,177,178,179,182,184,185,186,189,193,194,198,199,200,201,203,204,205,208,209,212,213,214,],[-3,16,-2,-1,16,-3,16,16,16,16,16,-18,-19,-22,-23,-8,16,-13,-14,-15,-16,-17,-4,-5,-65,-66,-67,-68,-70,-71,-43,-54,-57,-58,-59,-60,-12,129,-76,132,-95,-96,16,-69,-25,-26,-27,-50,-63,16,16,16,-24,-75,-20,-72,-46,-6,-44,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-77,-9,-10,-11,196,-94,-97,16,-45,16,-47,-53,-55,-56,-99,-61,-7,-28,-51,-48,-49,-98,-64,-21,-62,-52,]),'ID':([0,1,2,3,5,9,10,11,12,13,14,15,16,17,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,44,46,47,48,49,50,51,52,53,54,55,56,59,60,61,64,65,66,67,76,79,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,140,142,143,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,169,172,174,176,181,182,183,184,185,186,187,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,208,209,210,212,213,214,],[-3,19,-2,-1,19,-3,19,19,19,19,19,-18,-19,-22,-23,41,42,52,-8,69,74,74,19,-13,-14,-15,-16,-17,52,74,82,-4,-5,52,-65,-66,-67,52,-70,-71,-43,52,52,52,52,52,52,-54,-57,-58,-59,-60,-12,-76,82,82,52,74,19,144,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-69,52,-25,-26,-27,82,69,-50,-63,74,74,19,170,52,19,74,-79,52,19,-24,-75,-20,52,82,52,-72,-46,-6,-44,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,52,-77,52,-9,-10,-78,-11,82,19,52,-45,19,-47,52,-53,52,52,-55,-56,52,82,52,-99,-61,-7,-28,52,-51,-48,-49,-98,-64,52,-21,-62,-52,]),'FOR':([0,1,2,3,5,9,10,11,12,13,14,15,16,17,18,25,26,28,29,30,31,32,33,34,35,36,37,39,40,44,46,47,48,49,50,51,52,53,54,55,56,59,60,61,64,65,66,67,76,79,85,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,112,113,114,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,134,140,142,143,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,169,172,174,176,182,183,184,185,186,187,189,191,192,193,194,195,197,198,199,200,201,202,203,204,205,208,209,210,212,213,214,],[-3,20,-2,-1,20,-3,20,20,20,20,20,-18,-19,-22,-23,20,-8,20,20,20,-13,-14,-15,-16,-17,20,20,-4,-5,20,-65,-66,-67,20,-70,-71,-43,20,20,20,20,20,20,-54,-57,-58,-59,-60,-12,-76,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-69,20,-25,-26,-27,-50,-63,20,20,20,20,20,20,-79,20,20,-24,-75,-20,20,20,-72,-46,-6,-44,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,20,-77,20,-9,-10,-78,-11,20,20,-45,20,-47,20,-53,20,20,-55,-56,20,20,-99,-61,-7,-28,20,-51,-48,-49,-98,-64,20,-21,-62,-52,]),'USE':([0,1,2,3,5,9,10,11,12,13,14,15,16,17,18,26,30,31,32,33,34,35,39,40,46,47,48,49,50,51,52,61,64,65,66,67,76,79,88,106,112,113,114,117,118,121,124,128,129,130,131,140,142,143,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,169,172,176,182,184,185,186,189,193,194,198,199,200,201,203,204,205,208,209,212,213,214,],[-3,21,-2,-1,21,-3,21,21,21,21,21,-18,-19,-22,-23,-8,21,-13,-14,-15,-16,-17,-4,-5,-65,-66,-67,-68,-70,-71,-43,-54,-57,-58,-59,-60,-12,-76,21,-69,-25,-26,-27,-50,-63,21,21,21,-24,-75,-20,-72,-46,-6,-44,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-77,-9,-10,-11,21,-45,21,-47,-53,-55,-56,-99,-61,-7,-28,-51,-48,-49,-98,-64,-21,-62,-52,]),'INCLUDE':([0,1,2,3,5,9,10,11,12,13,14,15,16,17,18,26,30,31,32,33,34,35,39,40,46,47,48,49,50,51,52,61,64,65,66,67,76,79,88,106,112,113,114,117,118,121,124,128,129,130,131,140,142,143,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,169,172,176,182,184,185,186,189,193,194,198,199,200,201,203,204,205,208,209,212,213,214,],[-3,22,-2,-1,22,-3,22,22,22,22,22,-18,-19,-22,-23,-8,22,-13,-14,-15,-16,-17,-4,-5,-65,-66,-67,-68,-70,-71,-43,-54,-57,-58,-59,-60,-12,-76,22,-69,-25,-26,-27,-50,-63,22,22,22,-24,-75,-20,-72,-46,-6,-44,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-77,-9,-10,-11,22,-45,22,-47,-53,-55,-56,-99,-61,-7,-28,-51,-48,-49,-98,-64,-21,-62,-52,]),'FUNCTION':([0,1,2,3,5,9,10,11,12,13,14,15,16,17,18,25,26,28,29,30,31,32,33,34,35,36,37,39,40,44,46,47,48,49,50,51,52,53,54,55,56,59,60,61,64,65,66,67,76,79,85,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,112,113,114,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,134,140,142,143,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,169,172,174,176,182,183,184,185,186,187,189,191,192,193,194,195,197,198,199,200,201,202,203,204,205,208,209,210,212,213,214,],[-3,23,-2,-1,23,-3,23,23,23,23,23,-18,-19,-22,-23,57,-8,57,57,23,-13,-14,-15,-16,-17,57,57,-4,-5,57,-65,-66,-67,57,-70,-71,-43,57,57,57,57,57,57,-54,-57,-58,-59,-60,-12,-76,57,57,23,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-69,57,-25,-26,-27,-50,-63,57,57,23,57,23,57,-79,57,23,-24,-75,-20,57,57,-72,-46,-6,-44,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,57,-77,57,-9,-10,-78,-11,23,57,-45,23,-47,57,-53,57,57,-55,-56,57,57,-99,-61,-7,-28,57,-51,-48,-49,-98,-64,57,-21,-62,-52,]),'MODULE':([0,1,2,3,5,9,10,11,12,13,14,15,16,17,18,26,30,31,32,33,34,35,39,40,46,47,48,49,50,51,52,61,64,65,66,67,76,79,88,106,112,113,114,117,118,121,124,128,129,130,131,140,142,143,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,169,172,176,182,184,185,186,189,193,194,198,199,200,201,203,204,205,208,209,212,213,214,],[-3,24,-2,-1,24,-3,24,24,24,24,24,-18,-19,-22,-23,-8,24,-13,-14,-15,-16,-17,-4,-5,-65,-66,-67,-68,-70,-71,-43,-54,-57,-58,-59,-60,-12,-76,24,-69,-25,-26,-27,-50,-63,24,24,24,-24,-75,-20,-72,-46,-6,-44,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-77,-9,-10,-11,24,-45,24,-47,-53,-55,-56,-99,-61,-7,-28,-51,-48,-49,-98,-64,-21,-62,-52,]),'$end':([0,1,2,3,15,16,17,18,26,31,32,33,34,35,39,40,46,47,48,49,50,51,52,61,64,65,66,67,76,106,112,113,114,117,118,129,140,142,143,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,169,172,176,184,186,189,193,194,198,199,200,201,203,204,205,208,209,213,214,],[-3,0,-2,-1,-18,-19,-22,-23,-8,-13,-14,-15,-16,-17,-4,-5,-65,-66,-67,-68,-70,-71,-43,-54,-57,-58,-59,-60,-12,-69,-25,-26,-27,-50,-63,-24,-72,-46,-6,-44,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-77,-9,-10,-11,-45,-47,-53,-55,-56,-99,-61,-7,-28,-51,-48,-49,-98,-64,-62,-52,]),'}':([2,3,9,15,16,17,18,26,30,31,32,33,34,35,39,40,46,47,48,49,50,51,52,61,64,65,66,67,76,106,112,113,114,117,118,129,140,142,143,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,169,172,176,184,186,189,193,194,198,199,200,201,203,204,205,208,209,213,214,],[-2,-1,-3,-18,-19,-22,-23,-8,76,-13,-14,-15,-16,-17,-4,-5,-65,-66,-67,-68,-70,-71,-43,-54,-57,-58,-59,-60,-12,-69,-25,-26,-27,-50,-63,-24,-72,-46,-6,-44,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-77,-9,-10,-11,-45,-47,-53,-55,-56,-99,-61,-7,-28,-51,-48,-49,-98,-64,-62,-52,]),'(':([4,6,7,8,19,20,25,28,29,36,37,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,73,74,77,85,86,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,112,113,114,117,118,119,120,123,125,126,127,131,132,134,139,140,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,171,174,175,177,179,183,184,186,187,188,189,190,191,192,193,194,195,197,199,201,202,203,204,205,206,208,209,210,211,212,213,214,],[25,27,28,29,37,38,44,44,44,44,44,83,84,85,44,87,-65,-66,-67,44,-70,-71,-43,44,44,44,44,115,116,44,44,-54,119,120,-57,-58,-59,-60,87,-43,87,44,87,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,87,87,44,-25,-26,-27,87,87,44,44,44,44,-79,44,-20,44,44,87,-72,-46,-44,87,87,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,44,87,-77,44,87,-78,87,87,87,44,-45,-47,44,87,-53,87,44,44,-55,-56,44,44,87,87,44,-51,87,87,87,87,-64,44,87,-21,87,-52,]),'ELSE':([15,16,17,18,26,31,32,33,34,35,39,40,46,47,48,49,50,51,52,61,64,65,66,67,76,106,112,113,114,117,118,129,140,142,143,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,169,172,176,184,186,189,193,194,198,199,200,201,203,204,205,208,209,213,214,],[-18,-19,-22,-23,-8,-13,-14,-15,-16,-17,-4,-5,-65,-66,-67,-68,-70,-71,-43,-54,-57,-58,-59,-60,-12,-69,-25,-26,-27,-50,-63,-24,-72,-46,185,-44,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-77,-9,-10,-11,-45,-47,-53,-55,-56,-99,210,-7,-28,-51,-48,-49,-98,-64,-62,-52,]),'=':([19,69,74,82,170,180,],[36,123,127,134,195,197,]),'FILENAME':([21,22,],[39,40,]),'-':([25,28,29,36,37,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,64,65,66,67,73,74,77,85,86,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,112,113,114,117,118,119,120,123,125,126,127,131,132,134,139,140,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,171,174,175,177,179,183,184,186,187,188,189,190,191,192,193,194,195,197,199,201,202,203,204,205,206,208,209,210,211,212,213,214,],[54,54,54,54,54,54,94,-65,-66,-67,54,-70,-71,-43,54,54,54,54,54,54,-54,-57,-58,-59,-60,94,-43,94,54,94,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,94,94,54,-25,-26,-27,94,94,54,54,54,54,-79,54,-20,54,54,94,-72,-46,-44,94,94,-29,-30,-31,-32,-33,-34,94,94,94,94,94,94,94,94,54,94,-77,54,94,-78,94,94,94,54,-45,-47,54,94,-53,94,54,54,-55,-56,54,54,94,94,54,-51,94,94,94,94,-64,54,94,-21,94,-52,]),'+':([25,28,29,36,37,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,64,65,66,67,73,74,77,85,86,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,112,113,114,117,118,119,120,123,125,126,127,131,132,134,139,140,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,171,174,175,177,179,183,184,186,187,188,189,190,191,192,193,194,195,197,199,201,202,203,204,205,206,208,209,210,211,212,213,214,],[55,55,55,55,55,55,93,-65,-66,-67,55,-70,-71,-43,55,55,55,55,55,55,-54,-57,-58,-59,-60,93,-43,93,55,93,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,93,93,55,-25,-26,-27,93,93,55,55,55,55,-79,55,-20,55,55,93,-72,-46,-44,93,93,-29,-30,-31,-32,-33,-34,93,93,93,93,93,93,93,93,55,93,-77,55,93,-78,93,93,93,55,-45,-47,55,93,-53,93,55,55,-55,-56,55,55,93,93,55,-51,93,93,93,93,-64,55,93,-21,93,-52,]),'EACH':([25,28,29,36,37,44,49,53,54,55,56,59,60,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,119,120,123,125,126,127,131,132,134,161,164,174,183,187,191,192,193,194,195,197,202,210,212,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-79,59,-20,59,59,59,59,-78,59,59,59,59,-55,-56,59,59,59,59,-21,]),'[':([25,28,29,36,37,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,64,65,66,67,73,74,77,85,86,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,112,113,114,117,118,119,120,123,125,126,127,131,132,134,139,140,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,171,174,175,177,179,183,184,186,187,188,189,190,191,192,193,194,195,197,199,201,202,203,204,205,206,208,209,210,211,212,213,214,],[53,53,53,53,53,53,90,-65,-66,-67,53,-70,-71,-43,53,53,53,53,53,53,-54,-57,-58,-59,-60,90,-43,90,53,90,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-69,90,53,-25,-26,-27,-50,-63,53,53,53,53,-79,53,-20,53,53,90,-72,-46,-44,90,90,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,53,-63,-77,53,90,-78,90,90,90,53,-45,-47,53,90,-53,90,53,53,-55,-56,53,53,90,-28,53,-51,-48,-49,90,90,-64,53,90,-21,-62,-52,]),'STRING':([25,28,29,36,37,44,49,53,54,55,56,59,60,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,119,120,123,125,126,127,131,132,134,161,164,174,183,187,191,192,193,194,195,197,202,210,212,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-79,64,-20,64,64,64,64,-78,64,64,64,64,-55,-56,64,64,64,64,-21,]),'TRUE':([25,28,29,36,37,44,49,53,54,55,56,59,60,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,119,120,123,125,126,127,131,132,134,161,164,174,183,187,191,192,193,194,195,197,202,210,212,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-79,65,-20,65,65,65,65,-78,65,65,65,65,-55,-56,65,65,65,65,-21,]),'FALSE':([25,28,29,36,37,44,49,53,54,55,56,59,60,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,119,120,123,125,126,127,131,132,134,161,164,174,183,187,191,192,193,194,195,197,202,210,212,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-79,66,-20,66,66,66,66,-78,66,66,66,66,-55,-56,66,66,66,66,-21,]),'NUMBER':([25,28,29,36,37,44,49,53,54,55,56,59,60,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,119,120,123,125,126,127,131,132,134,161,164,174,183,187,191,192,193,194,195,197,202,210,212,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-79,67,-20,67,67,67,67,-78,67,67,67,67,-55,-56,67,67,67,67,-21,]),')':([28,29,37,45,46,47,48,49,50,51,52,61,64,65,66,67,68,70,71,72,73,74,75,78,80,81,82,83,84,86,87,106,112,113,114,115,117,118,119,120,126,135,136,137,138,139,140,141,142,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,165,166,167,168,171,173,174,175,178,179,181,184,186,189,193,194,199,201,203,204,205,206,207,209,213,214,],[-85,-85,79,88,-65,-66,-67,-68,-70,-71,-43,-54,-57,-58,-59,-60,121,124,-86,-88,-89,-43,128,130,131,-95,-96,-3,-3,140,142,-69,-25,-26,-27,-3,-50,-63,-85,-85,-79,180,-91,-93,182,183,-72,184,-46,-44,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-77,191,192,193,194,-73,-87,-78,-90,-94,-97,-92,-45,-47,-53,-55,-56,-61,-28,-51,-48,-49,-74,212,-64,-62,-52,]),'.':([45,46,47,48,49,50,51,52,61,64,65,66,67,73,74,77,86,106,107,112,113,114,117,118,139,140,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,171,175,177,179,184,186,188,189,190,193,194,199,201,203,204,205,206,208,209,211,213,214,],[89,-65,-66,-67,-68,-70,-71,-43,-54,-57,-58,-59,-60,89,-43,89,89,-69,89,-25,-26,-27,-50,-63,89,-72,-46,-44,89,89,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-63,-77,89,89,89,89,-45,-47,89,-53,89,-55,-56,89,-28,-51,-48,-49,89,89,-64,89,-62,-52,]),'?':([45,46,47,48,49,50,51,52,61,64,65,66,67,73,74,77,86,106,107,112,113,114,117,118,139,140,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,171,175,177,179,184,186,188,189,190,193,194,199,201,203,204,205,206,208,209,211,213,214,],[91,-65,-66,-67,-68,-70,-71,-43,-54,-57,-58,-59,-60,91,-43,91,91,91,91,-25,-26,-27,91,91,91,-72,-46,-44,91,91,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,91,-77,91,91,91,91,-45,-47,91,-53,91,-55,-56,91,-28,-51,-48,91,91,91,-64,91,91,-52,]),'/':([45,46,47,48,49,50,51,52,61,64,65,66,67,73,74,77,86,106,107,112,113,114,117,118,139,140,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,171,175,177,179,184,186,188,189,190,193,194,199,201,203,204,205,206,208,209,211,213,214,],[95,-65,-66,-67,-68,-70,-71,-43,-54,-57,-58,-59,-60,95,-43,95,95,95,95,-25,-26,-27,95,95,95,-72,-46,-44,95,95,95,95,95,-32,-33,-34,95,95,95,95,95,95,95,95,95,-77,95,95,95,95,-45,-47,95,-53,95,-55,-56,95,95,-51,95,95,95,95,-64,95,95,-52,]),'^':([45,46,47,48,49,50,51,52,61,64,65,66,67,73,74,77,86,106,107,112,113,114,117,118,139,140,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,171,175,177,179,184,186,188,189,190,193,194,199,201,203,204,205,206,208,209,211,213,214,],[97,-65,-66,-67,-68,-70,-71,-43,-54,-57,-58,-59,-60,97,-43,97,97,97,97,-25,-26,-27,97,97,97,-72,-46,-44,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-77,97,97,97,97,-45,-47,97,-53,97,-55,-56,97,97,-51,97,97,97,97,-64,97,97,-52,]),'<':([45,46,47,48,49,50,51,52,61,64,65,66,67,73,74,77,86,106,107,112,113,114,117,118,139,140,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,171,175,177,179,184,186,188,189,190,193,194,199,201,203,204,205,206,208,209,211,213,214,],[98,-65,-66,-67,-68,-70,-71,-43,-54,-57,-58,-59,-60,98,-43,98,98,98,98,-25,-26,-27,98,98,98,-72,-46,-44,98,98,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,98,98,98,-77,98,98,98,98,-45,-47,98,-53,98,-55,-56,98,98,-51,98,98,98,98,-64,98,98,-52,]),'>':([45,46,47,48,49,50,51,52,61,64,65,66,67,73,74,77,86,106,107,112,113,114,117,118,139,140,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,171,175,177,179,184,186,188,189,190,193,194,199,201,203,204,205,206,208,209,211,213,214,],[99,-65,-66,-67,-68,-70,-71,-43,-54,-57,-58,-59,-60,99,-43,99,99,99,99,-25,-26,-27,99,99,99,-72,-46,-44,99,99,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,99,99,99,-77,99,99,99,99,-45,-47,99,-53,99,-55,-56,99,99,-51,99,99,99,99,-64,99,99,-52,]),'EQUAL':([45,46,47,48,49,50,51,52,61,64,65,66,67,73,74,77,86,106,107,112,113,114,117,118,139,140,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,171,175,177,179,184,186,188,189,190,193,194,199,201,203,204,205,206,208,209,211,213,214,],[100,-65,-66,-67,-68,-70,-71,-43,-54,-57,-58,-59,-60,100,-43,100,100,100,100,-25,-26,-27,100,100,100,-72,-46,-44,100,100,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,100,100,100,-77,100,100,100,100,-45,-47,100,-53,100,-55,-56,100,100,-51,100,100,100,100,-64,100,100,-52,]),'NOT_EQUAL':([45,46,47,48,49,50,51,52,61,64,65,66,67,73,74,77,86,106,107,112,113,114,117,118,139,140,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,171,175,177,179,184,186,188,189,190,193,194,199,201,203,204,205,206,208,209,211,213,214,],[101,-65,-66,-67,-68,-70,-71,-43,-54,-57,-58,-59,-60,101,-43,101,101,101,101,-25,-26,-27,101,101,101,-72,-46,-44,101,101,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,101,101,101,-77,101,101,101,101,-45,-47,101,-53,101,-55,-56,101,101,-51,101,101,101,101,-64,101,101,-52,]),'GREATER_OR_EQUAL':([45,46,47,48,49,50,51,52,61,64,65,66,67,73,74,77,86,106,107,112,113,114,117,118,139,140,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,171,175,177,179,184,186,188,189,190,193,194,199,201,203,204,205,206,208,209,211,213,214,],[102,-65,-66,-67,-68,-70,-71,-43,-54,-57,-58,-59,-60,102,-43,102,102,102,102,-25,-26,-27,102,102,102,-72,-46,-44,102,102,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,102,102,102,-77,102,102,102,102,-45,-47,102,-53,102,-55,-56,102,102,-51,102,102,102,102,-64,102,102,-52,]),'LESS_OR_EQUAL':([45,46,47,48,49,50,51,52,61,64,65,66,67,73,74,77,86,106,107,112,113,114,117,118,139,140,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,171,175,177,179,184,186,188,189,190,193,194,199,201,203,204,205,206,208,209,211,213,214,],[103,-65,-66,-67,-68,-70,-71,-43,-54,-57,-58,-59,-60,103,-43,103,103,103,103,-25,-26,-27,103,103,103,-72,-46,-44,103,103,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,103,103,103,-77,103,103,103,103,-45,-47,103,-53,103,-55,-56,103,103,-51,103,103,103,103,-64,103,103,-52,]),'AND':([45,46,47,48,49,50,51,52,61,64,65,66,67,73,74,77,86,106,107,112,113,114,117,118,139,140,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,171,175,177,179,184,186,188,189,190,193,194,199,201,203,204,205,206,208,209,211,213,214,],[104,-65,-66,-67,-68,-70,-71,-43,-54,-57,-58,-59,-60,104,-43,104,104,104,104,-25,-26,-27,104,104,104,-72,-46,-44,104,104,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,104,-77,104,104,104,104,-45,-47,104,-53,104,-55,-56,104,104,-51,104,104,104,104,-64,104,104,-52,]),'OR':([45,46,47,48,49,50,51,52,61,64,65,66,67,73,74,77,86,106,107,112,113,114,117,118,139,140,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,171,175,177,179,184,186,188,189,190,193,194,199,201,203,204,205,206,208,209,211,213,214,],[105,-65,-66,-67,-68,-70,-71,-43,-54,-57,-58,-59,-60,105,-43,105,105,105,105,-25,-26,-27,105,105,105,-72,-46,-44,105,105,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,105,-77,105,105,105,105,-45,-47,105,-53,105,-55,-56,105,105,-51,105,105,105,105,-64,105,105,-52,]),',':([46,47,48,49,50,51,52,61,64,65,66,67,68,71,72,73,74,78,80,81,82,106,107,110,112,113,114,117,118,125,126,133,136,140,141,142,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,166,171,173,174,175,178,179,181,184,186,189,190,193,194,199,201,203,204,205,206,207,209,213,214,],[-65,-66,-67,-68,-70,-71,-43,-54,-57,-58,-59,-60,122,126,-88,-89,-43,126,126,-95,-96,-69,-84,126,-25,-26,-27,-50,-63,174,-79,174,126,-72,126,-46,-44,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-63,-77,174,122,-73,-87,-78,-90,-94,-97,174,-45,-47,-53,-83,-55,-56,-61,-28,-51,-48,-49,-74,126,-64,-62,-52,]),':':([46,47,48,49,50,51,52,61,64,65,66,67,106,107,112,113,114,117,118,140,142,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,184,186,188,189,193,194,199,201,203,204,205,209,213,214,],[-65,-66,-67,-68,-70,-71,-43,-54,-57,-58,-59,-60,-69,161,-25,-26,-27,-50,-63,-72,-46,-44,187,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-63,-77,-45,-47,202,-53,-55,-56,-61,-28,-51,-48,-49,-64,-62,-52,]),']':([46,47,48,49,50,51,52,53,61,64,65,66,67,106,107,109,110,111,112,113,114,117,118,126,140,142,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,174,184,186,188,189,190,193,194,199,201,203,204,205,209,211,213,214,],[-65,-66,-67,-68,-70,-71,-43,-3,-54,-57,-58,-59,-60,-69,-84,163,-80,-82,-25,-26,-27,-50,-63,-79,-72,-46,-44,186,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-63,-77,-81,-78,-45,-47,203,-53,-83,-55,-56,-61,-28,-51,-48,-49,-64,214,-62,-52,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,9,],[1,30,]),'empty':([0,9,53,83,84,115,],[2,2,111,137,137,137,]),'statement':([1,5,10,11,12,13,14,30,88,121,124,128,182,185,],[3,26,31,32,33,34,35,3,143,169,172,176,198,200,]),'for_loop':([1,5,10,11,12,13,14,25,28,29,30,36,37,44,49,53,54,55,56,59,60,85,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,119,120,121,123,124,125,127,128,132,134,161,164,182,183,185,187,191,192,195,197,202,210,],[5,5,5,5,5,5,5,60,60,60,5,60,60,60,60,108,60,60,60,60,60,60,60,5,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,5,60,5,60,60,5,60,60,60,60,5,60,5,60,60,60,60,60,60,60,]),'call':([1,5,10,11,12,13,14,30,88,121,124,128,182,185,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'use_include':([1,5,10,11,12,13,14,30,88,121,124,128,182,185,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'function':([1,5,10,11,12,13,14,30,88,121,124,128,182,185,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'module':([1,5,10,11,12,13,14,30,88,121,124,128,182,185,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'expression':([25,28,29,36,37,44,49,53,54,55,56,59,60,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,119,120,123,125,127,132,134,161,164,183,187,191,192,195,197,202,210,],[45,73,73,77,73,86,106,107,112,113,114,117,118,139,73,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,73,73,171,73,175,177,179,188,190,199,201,204,205,206,208,211,213,]),'access_expr':([25,28,29,36,37,44,49,53,54,55,56,59,60,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,119,120,123,125,127,132,134,161,164,183,187,191,192,195,197,202,210,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'logic_expr':([25,28,29,36,37,44,49,53,54,55,56,59,60,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,119,120,123,125,127,132,134,161,164,183,187,191,192,195,197,202,210,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'list_stuff':([25,28,29,36,37,44,49,53,54,55,56,59,60,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,119,120,123,125,127,132,134,161,164,183,187,191,192,195,197,202,210,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'assert_or_echo':([25,28,29,36,37,44,49,53,54,55,56,59,60,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,119,120,123,125,127,132,134,161,164,183,187,191,192,195,197,202,210,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'constants':([25,28,29,36,37,44,49,53,54,55,56,59,60,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,119,120,123,125,127,132,134,161,164,183,187,191,192,195,197,202,210,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'for_or_if':([25,28,29,36,37,44,49,53,54,55,56,59,60,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,119,120,123,125,127,132,134,161,164,183,187,191,192,195,197,202,210,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'tuple':([25,28,29,36,37,44,49,53,54,55,56,59,60,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,119,120,123,125,127,132,134,161,164,183,187,191,192,195,197,202,210,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'assignment_list':([27,116,],[68,166,]),'opt_call_parameter_list':([28,29,119,120,],[70,75,167,168,]),'call_parameter_list':([28,29,37,87,119,120,],[71,71,78,141,71,71,]),'call_parameter':([28,29,37,87,119,120,125,],[72,72,72,72,72,72,173,]),'parameter_list':([38,83,84,115,196,],[80,136,136,136,207,]),'parameter':([38,83,84,115,133,181,196,],[81,81,81,81,178,178,81,]),'opt_expression_list':([53,],[109,]),'expression_list':([53,],[110,]),'commas':([71,78,80,110,136,141,207,],[125,125,133,164,181,125,133,]),'opt_parameter_list':([83,84,115,],[135,138,165,]),'opt_else':([199,],[209,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_statements','scad_parser.py',34),
  ('statements -> empty','statements',1,'p_statements_empty','scad_parser.py',40),
  ('empty -> <empty>','empty',0,'p_empty','scad_parser.py',44),
  ('use_include -> USE FILENAME','use_include',2,'p_use_include','scad_parser.py',49),
  ('use_include -> INCLUDE FILENAME','use_include',2,'p_use_include','scad_parser.py',50),
  ('statement -> IF ( expression ) statement','statement',5,'p_statement','scad_parser.py',55),
  ('statement -> IF ( expression ) statement ELSE statement','statement',7,'p_statement','scad_parser.py',56),
  ('statement -> for_loop statement','statement',2,'p_statement','scad_parser.py',57),
  ('statement -> LET ( assignment_list ) statement','statement',5,'p_statement','scad_parser.py',58),
  ('statement -> ASSERT ( opt_call_parameter_list ) statement','statement',5,'p_statement','scad_parser.py',59),
  ('statement -> ECHO ( opt_call_parameter_list ) statement','statement',5,'p_statement','scad_parser.py',60),
  ('statement -> { statements }','statement',3,'p_statement','scad_parser.py',61),
  ('statement -> % statement','statement',2,'p_statement','scad_parser.py',62),
  ('statement -> * statement','statement',2,'p_statement','scad_parser.py',63),
  ('statement -> ! statement','statement',2,'p_statement','scad_parser.py',64),
  ('statement -> # statement','statement',2,'p_statement','scad_parser.py',65),
  ('statement -> call statement','statement',2,'p_statement','scad_parser.py',66),
  ('statement -> use_include','statement',1,'p_statement','scad_parser.py',67),
  ('statement -> ;','statement',1,'p_statement','scad_parser.py',68),
  ('for_loop -> FOR ( parameter_list )','for_loop',4,'p_for_loop','scad_parser.py',71),
  ('for_loop -> FOR ( parameter_list ; expression ; parameter_list )','for_loop',8,'p_for_loop','scad_parser.py',72),
  ('statement -> function','statement',1,'p_statement_function','scad_parser.py',75),
  ('statement -> module','statement',1,'p_statement_module','scad_parser.py',79),
  ('statement -> ID = expression ;','statement',4,'p_statement_assignment','scad_parser.py',83),
  ('logic_expr -> - expression','logic_expr',2,'p_logic_expr','scad_parser.py',87),
  ('logic_expr -> + expression','logic_expr',2,'p_logic_expr','scad_parser.py',88),
  ('logic_expr -> ! expression','logic_expr',2,'p_logic_expr','scad_parser.py',89),
  ('logic_expr -> expression ? expression : expression','logic_expr',5,'p_logic_expr','scad_parser.py',90),
  ('logic_expr -> expression % expression','logic_expr',3,'p_logic_expr','scad_parser.py',91),
  ('logic_expr -> expression + expression','logic_expr',3,'p_logic_expr','scad_parser.py',92),
  ('logic_expr -> expression - expression','logic_expr',3,'p_logic_expr','scad_parser.py',93),
  ('logic_expr -> expression / expression','logic_expr',3,'p_logic_expr','scad_parser.py',94),
  ('logic_expr -> expression * expression','logic_expr',3,'p_logic_expr','scad_parser.py',95),
  ('logic_expr -> expression ^ expression','logic_expr',3,'p_logic_expr','scad_parser.py',96),
  ('logic_expr -> expression < expression','logic_expr',3,'p_logic_expr','scad_parser.py',97),
  ('logic_expr -> expression > expression','logic_expr',3,'p_logic_expr','scad_parser.py',98),
  ('logic_expr -> expression EQUAL expression','logic_expr',3,'p_logic_expr','scad_parser.py',99),
  ('logic_expr -> expression NOT_EQUAL expression','logic_expr',3,'p_logic_expr','scad_parser.py',100),
  ('logic_expr -> expression GREATER_OR_EQUAL expression','logic_expr',3,'p_logic_expr','scad_parser.py',101),
  ('logic_expr -> expression LESS_OR_EQUAL expression','logic_expr',3,'p_logic_expr','scad_parser.py',102),
  ('logic_expr -> expression AND expression','logic_expr',3,'p_logic_expr','scad_parser.py',103),
  ('logic_expr -> expression OR expression','logic_expr',3,'p_logic_expr','scad_parser.py',104),
  ('access_expr -> ID','access_expr',1,'p_access_expr','scad_parser.py',108),
  ('access_expr -> expression . ID','access_expr',3,'p_access_expr','scad_parser.py',109),
  ('access_expr -> expression ( call_parameter_list )','access_expr',4,'p_access_expr','scad_parser.py',110),
  ('access_expr -> expression ( )','access_expr',3,'p_access_expr','scad_parser.py',111),
  ('access_expr -> expression [ expression ]','access_expr',4,'p_access_expr','scad_parser.py',112),
  ('list_stuff -> FUNCTION ( opt_parameter_list ) expression','list_stuff',5,'p_list_stuff','scad_parser.py',116),
  ('list_stuff -> LET ( assignment_list ) expression','list_stuff',5,'p_list_stuff','scad_parser.py',117),
  ('list_stuff -> EACH expression','list_stuff',2,'p_list_stuff','scad_parser.py',118),
  ('list_stuff -> [ expression : expression ]','list_stuff',5,'p_list_stuff','scad_parser.py',119),
  ('list_stuff -> [ expression : expression : expression ]','list_stuff',7,'p_list_stuff','scad_parser.py',120),
  ('list_stuff -> [ for_loop expression ]','list_stuff',4,'p_list_stuff','scad_parser.py',121),
  ('list_stuff -> tuple','list_stuff',1,'p_list_stuff','scad_parser.py',122),
  ('assert_or_echo -> ASSERT ( opt_call_parameter_list )','assert_or_echo',4,'p_assert_or_echo','scad_parser.py',126),
  ('assert_or_echo -> ECHO ( opt_call_parameter_list )','assert_or_echo',4,'p_assert_or_echo','scad_parser.py',127),
  ('constants -> STRING','constants',1,'p_constants','scad_parser.py',130),
  ('constants -> TRUE','constants',1,'p_constants','scad_parser.py',131),
  ('constants -> FALSE','constants',1,'p_constants','scad_parser.py',132),
  ('constants -> NUMBER','constants',1,'p_constants','scad_parser.py',133),
  ('opt_else -> <empty>','opt_else',0,'p_opt_else','scad_parser.py',136),
  ('opt_else -> ELSE expression','opt_else',2,'p_opt_else','scad_parser.py',137),
  ('for_or_if -> for_loop expression','for_or_if',2,'p_for_or_if','scad_parser.py',141),
  ('for_or_if -> IF ( expression ) expression opt_else','for_or_if',6,'p_for_or_if','scad_parser.py',142),
  ('expression -> access_expr','expression',1,'p_expression','scad_parser.py',146),
  ('expression -> logic_expr','expression',1,'p_expression','scad_parser.py',147),
  ('expression -> list_stuff','expression',1,'p_expression','scad_parser.py',148),
  ('expression -> assert_or_echo','expression',1,'p_expression','scad_parser.py',149),
  ('expression -> assert_or_echo expression','expression',2,'p_expression','scad_parser.py',150),
  ('expression -> constants','expression',1,'p_expression','scad_parser.py',151),
  ('expression -> for_or_if','expression',1,'p_expression','scad_parser.py',152),
  ('expression -> ( expression )','expression',3,'p_expression','scad_parser.py',153),
  ('assignment_list -> ID = expression','assignment_list',3,'p_assignment_list','scad_parser.py',158),
  ('assignment_list -> assignment_list , ID = expression','assignment_list',5,'p_assignment_list','scad_parser.py',159),
  ('call -> ID ( call_parameter_list )','call',4,'p_call','scad_parser.py',163),
  ('call -> ID ( )','call',3,'p_call','scad_parser.py',164),
  ('tuple -> [ opt_expression_list ]','tuple',3,'p_tuple','scad_parser.py',167),
  ('commas -> commas ,','commas',2,'p_commas','scad_parser.py',171),
  ('commas -> ,','commas',1,'p_commas','scad_parser.py',172),
  ('opt_expression_list -> expression_list','opt_expression_list',1,'p_opt_expression_list','scad_parser.py',176),
  ('opt_expression_list -> expression_list commas','opt_expression_list',2,'p_opt_expression_list','scad_parser.py',177),
  ('opt_expression_list -> empty','opt_expression_list',1,'p_opt_expression_list','scad_parser.py',178),
  ('expression_list -> expression_list commas expression','expression_list',3,'p_expression_list','scad_parser.py',180),
  ('expression_list -> expression','expression_list',1,'p_expression_list','scad_parser.py',181),
  ('opt_call_parameter_list -> <empty>','opt_call_parameter_list',0,'p_opt_call_parameter_list','scad_parser.py',185),
  ('opt_call_parameter_list -> call_parameter_list','opt_call_parameter_list',1,'p_opt_call_parameter_list','scad_parser.py',186),
  ('call_parameter_list -> call_parameter_list commas call_parameter','call_parameter_list',3,'p_call_parameter_list','scad_parser.py',189),
  ('call_parameter_list -> call_parameter','call_parameter_list',1,'p_call_parameter_list','scad_parser.py',190),
  ('call_parameter -> expression','call_parameter',1,'p_call_parameter','scad_parser.py',193),
  ('call_parameter -> ID = expression','call_parameter',3,'p_call_parameter','scad_parser.py',194),
  ('opt_parameter_list -> parameter_list','opt_parameter_list',1,'p_opt_parameter_list','scad_parser.py',197),
  ('opt_parameter_list -> parameter_list commas','opt_parameter_list',2,'p_opt_parameter_list','scad_parser.py',198),
  ('opt_parameter_list -> empty','opt_parameter_list',1,'p_opt_parameter_list','scad_parser.py',199),
  ('parameter_list -> parameter_list commas parameter','parameter_list',3,'p_parameter_list','scad_parser.py',207),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','scad_parser.py',208),
  ('parameter -> ID','parameter',1,'p_parameter','scad_parser.py',215),
  ('parameter -> ID = expression','parameter',3,'p_parameter','scad_parser.py',216),
  ('function -> FUNCTION ID ( opt_parameter_list ) = expression','function',7,'p_function','scad_parser.py',220),
  ('module -> MODULE ID ( opt_parameter_list ) statement','module',6,'p_module','scad_parser.py',229),
]
